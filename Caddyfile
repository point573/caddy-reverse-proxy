# global options
{
	admin off
	persist_config off
	auto_https off

	log {
		format json
	}

	servers {
		trusted_proxies static private_ranges
	}
}

(lb_settings) {
	lb_policy round_robin
	lb_retries 100
	lb_try_duration 10s
	lb_try_interval 250ms
}

(passive_health_checks) {
	fail_duration 60s
	max_fails 300
	unhealthy_latency 5s
	unhealthy_request_count 200
}

# site block, listens on the $PORT environment variable, automatically assigned by railway
:{$PORT} {
	# encabezados para permitir iframe y CORS
	header {
		Access-Control-Allow-Origin *
		Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
		Access-Control-Allow-Headers "Origin, Content-Type, Accept, Authorization"
		X-Frame-Options "ALLOWALL"
		Referrer-Policy "no-referrer"
	}

	# access logs
	log {
		format json
	}

	# proxy all requests for /* to the frontend
	reverse_proxy {
		dynamic a {
			name {$FRONTEND_DOMAIN}
			port {$FRONTEND_PORT}
			refresh 1s
			dial_timeout 30s
			versions ipv4 ipv6
		}

		import lb_settings
		import passive_health_checks
		header_up Host {upstream_hostport}
	}

	# proxy requests to /api/* to the backend
	handle_path {$BACKEND_PATH:/api}/* {
		reverse_proxy {
			dynamic a {
				name {$BACKEND_DOMAIN}
				port {$BACKEND_PORT}
				refresh 1s
				dial_timeout 30s
				versions ipv4 ipv6
			}

			import lb_settings
			import passive_health_checks
			header_up Host {upstream_hostport}
		}
	}
}
